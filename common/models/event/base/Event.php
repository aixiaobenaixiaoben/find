<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\event\base;

use Yii;

/**
 * This is the base-model class for table "event".
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $theme
 * @property string $description
 * @property integer $is_finished
 * @property string $urgent
 * @property string $occur_at
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \common\models\user\User $user
 * @property \common\models\location\LocationCurrent[] $locationCurrents
 * @property \common\models\location\LocationNew[] $locationNews
 */
abstract class Event extends \yii\db\ActiveRecord
{


    /**
     * ENUM field values
     */
    const URGENT_MILD = 'mild';
    const URGENT_URGENT = 'urgent';
    const URGENT_EMERGENCY = 'emergency';
    var $enum_labels = false;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'event';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'theme'], 'required'],
            [['user_id', 'is_finished'], 'integer'],
            [['description', 'urgent'], 'string'],
            [['occur_at', 'created_at', 'updated_at'], 'safe'],
            [['theme'], 'string', 'max' => 255],
            ['urgent', 'in', 'range' => [
                self::URGENT_MILD,
                self::URGENT_URGENT,
                self::URGENT_EMERGENCY,
            ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'theme' => 'Theme',
            'description' => 'Description',
            'is_finished' => 'Is Finished',
            'urgent' => 'Urgent',
            'occur_at' => 'Occur At',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\common\models\user\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLocationCurrents()
    {
        return $this->hasMany(\common\models\location\LocationCurrent::className(), ['event_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLocationNews()
    {
        return $this->hasMany(\common\models\location\LocationNew::className(), ['event_id' => 'id']);
    }


    /**
     * get column urgent enum value label
     * @param string $value
     * @return string
     */
    public static function getUrgentValueLabel($value)
    {
        $labels = self::optsUrgent();
        if (isset($labels[$value])) {
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column urgent ENUM value labels
     * @return array
     */
    public static function optsUrgent()
    {
        return [
            self::URGENT_MILD => 'Mild',
            self::URGENT_URGENT => 'Urgent',
            self::URGENT_EMERGENCY => 'Emergency',
        ];
    }

}
